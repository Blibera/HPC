import HMM_test
from hmmlearn import hmm
import numpy as np
import pandas as pd

states = ['High_Down', 'Low_Down', 'Low_Up', 'High_Up']
symbols = ('0', '1')

start_prob = np.array([0.403, 0.366, 0.117, 0.114])

trans_prob = np.array([
    [0.028, 0.228, 0.404, 0.34 ],
    [0.021, 0.246, 0.616, 0.117],
    [0.052, 0.569, 0.304, 0.075],
    [0.744, 0.175, 0.07 , 0.011]
])

emit_prob  = np.array([[0.856, 0.106, 0.   , 0.016, 0.   , 0.001, 0.   , 0.011, 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.002, 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.005, 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.001, 0.   , 0.   , 0.   , 0.   , 0.   , 0.001, 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.001, 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   ], [0.37 , 0.08 , 0.01 , 0.023, 0.008, 0.006, 0.015, 0.04 , 0.002,
        0.001, 0.001, 0.001, 0.001, 0.001, 0.012, 0.022, 0.001, 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.008, 0.005, 0.001,
        0.002, 0.003, 0.002, 0.016, 0.066, 0.008, 0.003, 0.001, 0.001,
        0.002, 0.001, 0.002, 0.003, 0.   , 0.001, 0.   , 0.   , 0.   ,
        0.   , 0.001, 0.001, 0.002, 0.001, 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.003, 0.001, 0.001, 0.   , 0.002, 0.001, 0.004,
        0.013, 0.038, 0.007, 0.003, 0.003, 0.005, 0.002, 0.008, 0.01 ,
        0.   , 0.   , 0.   , 0.001, 0.   , 0.   , 0.002, 0.003, 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.003, 0.001,
        0.001, 0.   , 0.002, 0.   , 0.013, 0.017, 0.024, 0.001, 0.002,
        0.002, 0.002, 0.002, 0.006, 0.007, 0.   , 0.   , 0.   , 0.   ,
        0.001, 0.   , 0.   , 0.002, 0.004, 0.001, 0.   , 0.   , 0.   ,
        0.   , 0.001, 0.   , 0.005, 0.003, 0.001, 0.003, 0.001, 0.002,
        0.016, 0.046], [0.03 , 0.005, 0.001, 0.001, 0.001, 0.001, 0.003, 0.003, 0.   ,
        0.001, 0.   , 0.001, 0.   , 0.   , 0.002, 0.001, 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.001, 0.001,
        0.   , 0.   , 0.   , 0.003, 0.005, 0.014, 0.002, 0.002, 0.001,
        0.002, 0.001, 0.002, 0.004, 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.001, 0.001, 0.001, 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.002, 0.001, 0.001, 0.002, 0.001, 0.001, 0.005,
        0.021, 0.013, 0.002, 0.002, 0.001, 0.001, 0.001, 0.008, 0.003,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.001, 0.002, 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.002, 0.   ,
        0.   , 0.   , 0.001, 0.   , 0.014, 0.007, 0.091, 0.004, 0.005,
        0.003, 0.007, 0.004, 0.014, 0.022, 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.001, 0.005, 0.042, 0.001, 0.002, 0.002, 0.003,
        0.001, 0.005, 0.005, 0.032, 0.003, 0.006, 0.007, 0.02 , 0.006,
        0.118, 0.408], [0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.001, 0.001, 0.   , 0.   , 0.   , 0.001, 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.004, 0.002, 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   , 0.   ,
        0.001, 0.   , 0.001, 0.   , 0.   , 0.   , 0.   , 0.002, 0.   ,
        0.104, 0.883]])



model = HMM_test.Model(states, symbols, start_prob, trans_prob, emit_prob)

sequence = ['Down', 'Up', 'Down']

print(model.evaluate(sequence))
print(model.decode(sequence))
